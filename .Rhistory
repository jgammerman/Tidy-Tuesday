# gather(level, occupation, industry, major_occupation, minor_occupation) %>%    #    original code shown for comparison
pivot_longer(c(industry, major_occupation, minor_occupation), names_to = "level", values_to = "occupation") %>%
group_by(dimension, race_gender, level, occupation, year) %>%
summarize(employ_n = sum(employ_n)) %>%
ungroup() %>%
arrange(year)
head(comparison)
# Chunk 8
comparison <- comparison %>%
group_by(dimension, race_gender, level, occupation) %>%
summarize(ratio = last(employ_n) / first(employ_n), # get ratio of 2020 number divided by 2019
change = ratio - 1,
employed_2019 = first(employ_n)) %>%  # get 2019 number
group_by(dimension, level, occupation) %>% # create a new group without the race_gender
mutate(total_2019 = sum(employed_2019)) %>%  # gives us total for all race_genders
ungroup()
head(comparison)
# Chunk 9
comparison %>%
filter(dimension == "Total", level == "industry") %>%
mutate(occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_col() +
scale_x_continuous(labels = percent) +
labs(title = "What industries suffered the most in 2020?",
x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "")
# Chunk 10
library(glue)
compare_lollipop <- function(tbl) {
tbl %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
}
# Chunk 11
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
compare_lollipop()
head(comparison)
head(comparison)
comparison %>%
filter(dimension == "Total", level == "industry") %>%
mutate(occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_col() +
scale_x_continuous(labels = percent) +
labs(title = "What industries suffered the most in 2020?",
x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
compare_lollipop()
comparison
tbl %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: plot_image
#knitr::include_graphics("plot.png")
# Chunk 3: Load
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt <- tt_load("2021-02-23")
#load("tt.RData")
employed <- tt$employed
# Chunk 4: EDA
head(employed)
# Chunk 5: Cleaning
employed_cleaned <- employed %>%
mutate(
dimension = case_when(
race_gender == "TOTAL" ~ "Total",
race_gender %in% c("Men", "Women") ~ "Gender",
TRUE ~ "Race")) %>%
filter(!is.na(employ_n)) %>%
mutate(industry = fct_lump_n(industry, n=10, w = employ_n), # note to self: same args as fct_lump() from original code
year = forcats::as_factor(year))
head(employed_cleaned)
# Chunk 6
employed_cleaned %>%
filter(dimension == "Total", year %in% c(2019, 2020)) %>%
ggplot(aes(year, employ_n, fill = industry)) +
geom_col() +
scale_y_continuous(labels = comma) +
labs(y = "# employed in industry",
x = "Year")
# Chunk 7
comparison <- employed_cleaned %>%
filter(year %in% c(2019, 2020)) %>%
mutate(major_occupation = paste(industry, major_occupation, sep = " - "),
minor_occupation = paste(major_occupation, minor_occupation, sep = " - ")) %>%
# gather(level, occupation, industry, major_occupation, minor_occupation) %>%    #    original code shown for comparison
pivot_longer(c(industry, major_occupation, minor_occupation), names_to = "level", values_to = "occupation") %>%
group_by(dimension, race_gender, level, occupation, year) %>%
summarize(employ_n = sum(employ_n)) %>%
ungroup() %>%
arrange(year)
head(comparison)
# Chunk 8
comparison <- comparison %>%
group_by(dimension, race_gender, level, occupation) %>%
summarize(ratio = last(employ_n) / first(employ_n), # get ratio of 2020 number divided by 2019
change = ratio - 1,
employed_2019 = first(employ_n)) %>%  # get 2019 number
group_by(dimension, level, occupation) %>% # create a new group without the race_gender
mutate(total_2019 = sum(employed_2019)) %>%  # gives us total for all race_genders
ungroup()
head(comparison)
# Chunk 9
comparison %>%
filter(dimension == "Total", level == "industry") %>%
mutate(occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_col() +
scale_x_continuous(labels = percent) +
labs(title = "What industries suffered the most in 2020?",
x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "")
# Chunk 10
# comparison %>%
#   mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
#          occupation = fct_reorder(occupation, change)) %>%
#   ggplot(aes(change, occupation)) +
#   geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                  height = 0,
#                  position = position_dodge(width = .7)) +
#   geom_point(aes(size = employed_2019, color = race_gender),
#              position = position_dodge(width = .7)) +
#   geom_vline(lty = 2, xintercept = 0) +
#   scale_x_continuous(labels = percent) +
#   scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
#   scale_size_continuous(labels = comma, guide = FALSE) +
#   labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
#        y = "",
#        color = "",
#        size = "# employed 2019")
# Chunk 11
library(glue)
compare_lollipop <- function(tbl) {
tbl %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
}
# Chunk 12
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
compare_lollipop()
comparison %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
compare_lollipop()
library(glue)
compare_lollipop <- function(tbl) {
tbl %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
}
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
compare_lollipop()
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"))
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change))
?comma
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
# geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
View(comparison)
table(comparison$dimension)
comparison <- employed_cleaned %>%
filter(year %in% c(2019, 2020)) %>%
mutate(major_occupation = paste(industry, major_occupation, sep = " - "),
minor_occupation = paste(major_occupation, minor_occupation, sep = " - ")) %>%
# gather(level, occupation, industry, major_occupation, minor_occupation) %>%    #    original code shown for comparison
pivot_longer(c(industry, major_occupation, minor_occupation), names_to = "level", values_to = "occupation") %>%
group_by(dimension, race_gender, level, occupation, year) %>%
summarize(employ_n = sum(employ_n)) %>%
ungroup() %>%
arrange(year)
head(comparison)
comparison <- comparison %>%
group_by(dimension, race_gender, level, occupation) %>%
summarize(ratio = last(employ_n) / first(employ_n), # get ratio of 2020 number divided by 2019
change = ratio - 1,
employed_2019 = first(employ_n)) %>%  # get 2019 number
group_by(dimension, level, occupation) %>% # create a new group without the race_gender
mutate(total_2019 = sum(employed_2019)) %>%  # gives us total for all race_genders
ungroup()
head(comparison)
comparison %>%
filter(dimension == "Total", level == "industry") %>%
mutate(occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_col() +
scale_x_continuous(labels = percent) +
labs(title = "What industries suffered the most in 2020?",
x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
# geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
?position_dodge
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
# geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender)) +
# geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
# geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
# geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
#                height = 0,
#                position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
# scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Gender", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
comparison %>%
filter(dimension == "Race", level == "industry") %>%
mutate(occupation = glue("{ occupation } ({ comma(total_2019 / 1000) }K)"),
occupation = fct_reorder(occupation, change)) %>%
ggplot(aes(change, occupation)) +
geom_errorbarh(aes(xmin = 0, xmax = change, color = race_gender),
height = 0,
position = position_dodge(width = .7)) +
geom_point(aes(size = employed_2019, color = race_gender),
position = position_dodge(width = .7)) +
geom_vline(lty = 2, xintercept = 0) +
scale_x_continuous(labels = percent) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
scale_size_continuous(labels = comma, guide = FALSE) +
labs(x = "Shift in # employed from 2019 to 2020 (BLS)",
y = "",
color = "",
size = "# employed 2019")
